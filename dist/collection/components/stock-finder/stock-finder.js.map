{"version":3,"file":"stock-finder.js","sourceRoot":"","sources":["../../../src/components/stock-finder/stock-finder.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAQ,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,eAAe,CAAC;AACjE,OAAO,EAAE,OAAO,EAAE,MAAM,qBAAqB,CAAC;AAQ9C,MAAM,OAAO,WAAW;;wBAGoC,EAAE;mBACzC,KAAK;;2BAEG,KAAK;;EAIhC,WAAW,CAAC,KAAY;IACtB,KAAK,CAAC,cAAc,EAAE,CAAA;IACtB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAA;IACnB,MAAM,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAA;IAC3C,KAAK,CAAC,qEAAqE,SAAS,WAAW,OAAO,EAAE,CAAC;OACtG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;OACvB,IAAI,CAAC,QAAQ,CAAC,EAAE;MACf,IAAG,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAC;QAC1B,MAAM,IAAI,KAAK,CAAC,gBAAgB,CAAC,CAAA;OAClC;MACD,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;QACtD,OAAO,EAAE,IAAI,EAAE,KAAK,CAAC,SAAS,CAAC,EAAE,MAAM,EAAE,KAAK,CAAC,WAAW,CAAC,EAAC,CAAA;MAC9D,CAAC,CAAC,CAAA;MACF,IAAI,CAAC,KAAK,GAAG,IAAI,CAAA;MACjB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAA;IACtB,CAAC,CAAC;OACD,KAAK,CAAC,GAAG,CAAC,EAAE;MACX,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;MAChB,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,OAAO,CAAA;MACxB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAA;IACtB,CAAC,CAAC,CAAA;EACN,CAAC;EAED,cAAc,CAAC,MAAc;IAC3B,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;EACpC,CAAC;EAED,QAAQ;IACN,OAAO;MACL,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;KACjC,CAAA;EACH,CAAC;EAGD,MAAM;IACJ,IAAI,OAAO,GAAG,cAEI,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAC9B,UAAI,OAAO,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,MAAM,CAAC;MACxD,kBAAS,MAAM,CAAC,MAAM,CAAU;;MAAI,MAAM,CAAC,IAAI,CAC5C,CACN,CAAC,CAED,CAAA;IACnB,IAAG,IAAI,CAAC,OAAO,EAAE;MACf,OAAO,GAAG,CAAC,WAAK,KAAK,EAAC,YAAY;QAAC,cAAW;QAAA,cAAW,CAAM,CAAC,CAAA;KACjE;IACD,IAAG,IAAI,CAAC,KAAK,EAAE;MACb,OAAO,GAAG,aAAI,IAAI,CAAC,KAAK,CAAK,CAAA;KAC9B;IACD,OAAO;MACL,YAAM,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC;QACzC,aAAO,EAAE,EAAC,cAAc,EAChB,GAAG,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC,GACnC;QACV,cAAQ,IAAI,EAAC,QAAQ,WAAc,CAC9B;MACP,OAAO;KACR,CAAA;EACH,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAEF","sourcesContent":["import { Component, Host, State, h, Event } from '@stencil/core';\nimport { API_KEY } from '../../global/global';\nimport { EventEmitter } from 'stream';\n\n@Component({\n  tag: 'stock-finder',\n  styleUrl: 'stock-finder.css',\n  shadow: true,\n})\nexport class StockFinder {\n  stockNameInput: HTMLInputElement\n\n  @State() searchResult: {symbol: string, name: string}[] = []\n  @State() loading = false\n  @State() error: string\n  @State() stockInputValid = false\n\n  @Event({bubbles: true, composed: true}) ucSymbolSelected: EventEmitter\n\n  onFindStock(event: Event){\n    event.preventDefault()\n    this.loading = true\n    const stockName = this.stockNameInput.value\n    fetch(`https://www.alphavantage.co/query?function=SYMBOL_SEARCH&keywords=${stockName}&apikey=${API_KEY}`)\n      .then(res => res.json())\n      .then(parseRes => {\n        if(!parseRes[\"bestMatches\"]){\n          throw new Error(\"Invalid symbol\")\n        }\n        this.searchResult = parseRes[\"bestMatches\"].map(match => {\n          return { name: match[\"2. name\"], symbol: match[\"1. symbol\"]}\n        })\n        this.error = null\n        this.loading = false\n      })\n      .catch(err => {\n        console.log(err)\n        this.error = err.message\n        this.loading = false\n      })\n  }\n\n  onSelectSymbol(symbol: string) {\n    this.ucSymbolSelected.emit(symbol)\n  }\n\n  hostData() {\n    return {\n      class: this.error ? \"error\" : \"\"\n    }\n  }\n\n\n  render() {\n    let content = <ul>\n                    {\n                      this.searchResult.map(result => (\n                        <li onClick={this.onSelectSymbol.bind(this, result.symbol)}>\n                          <strong>{result.symbol}</strong> - {result.name}\n                        </li>\n                      ))\n                    }\n                  </ul>\n    if(this.loading) {\n      content = (<div class=\"lds-ripple\"><div></div><div></div></div>)\n    }    \n    if(this.error) {\n      content = <p>{this.error}</p>\n    }          \n    return [\n      <form onSubmit={this.onFindStock.bind(this)}>\n        <input id=\"stock-symbol\" \n                ref={el => (this.stockNameInput = el)} \n                />\n        <button type='submit'>Find</button>\n      </form>,\n      content      \n    ]\n  }\n\n}\n"]}