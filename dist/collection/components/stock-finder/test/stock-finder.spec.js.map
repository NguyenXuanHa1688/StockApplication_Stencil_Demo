{"version":3,"file":"stock-finder.spec.js","sourceRoot":"","sources":["../../../../src/components/stock-finder/test/stock-finder.spec.tsx"],"names":[],"mappings":"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","sourcesContent":["import { StockFinder } from '../stock-finder';\n\ndescribe('StockFinder', () => {\n  let component: StockFinder;\n\n  beforeEach(() => {\n    component = new StockFinder();\n    component.error = null\n    \n  });\n\n  test('onFindStock - sets searchResult when valid symbol is provided', async () => {\n    const stockName = 'AAPL';\n    const mockResponse = {\n      \"bestMatches\": [\n        {\n          \"1. symbol\": \"AAPL\",\n          \"2. name\": \"Apple Inc.\"\n        }\n      ]\n    };\n\n    global.fetch = jest.fn().mockImplementation(() => {\n      const response = {\n        ok: true,\n        json: () => Promise.resolve({mockResponse})\n      };\n      return Promise.resolve(response);\n    });\n\n    component.stockNameInput = document.createElement('input');\n    component.stockNameInput.value = stockName;\n    await component.onFindStock(new Event('submit'));\n    expect(component.searchResult).toEqual([\n      { name: 'Apple Inc.', symbol: 'AAPL' }\n    ]);\n    console.log(component.searchResult)\n    expect(component.error).toBeNull();\n    expect(component.loading).toBe(false);\n  });\n\n  test('onFindStock - sets error and loading when invalid symbol is provided', async () => {\n    const stockName = 'INVALID';\n    const mockResponse = {\n      \"Error Message\": \"Invalid API call. Please retry or visit the documentation (https://www.alphavantage.co/documentation/) for SYMBOL_SEARCH.\"\n    };\n    global.fetch = jest.fn().mockImplementation(() => {\n      const response = {\n        ok: true,\n        json: () => Promise.resolve({mockResponse})\n      };\n      return Promise.resolve(response);\n    });\n    component.stockNameInput = document.createElement('input');\n    component.stockNameInput.value = stockName;\n    await component.onFindStock(new Event('submit'));\n    expect(component.searchResult).toEqual([]);\n    expect(component.error).toBe('Invalid symbol');\n    expect(component.loading).toBe(false);\n  });\n\n  test('onSelectSymbol - emits ucSymbolSelected event with symbol', () => {\n    const symbol = 'AAPL';\n    const emitSpy = jest.spyOn(component.ucSymbolSelected, 'emit');\n    component.onSelectSymbol(symbol);\n    expect(emitSpy).toHaveBeenCalledWith(symbol);\n  });\n});"]}